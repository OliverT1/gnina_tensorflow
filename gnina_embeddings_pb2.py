# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gnina_embeddings.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
    name='gnina_embeddings.proto',
    package='gnina_autoencoder',
    syntax='proto3',
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
    serialized_pb=b'\n\x16gnina_embeddings.proto\x12\x11gnina_autoencoder\"8\n\nligand_obj\x12\x13\n\x0bligand_path\x18\x01 \x01(\t\x12\x15\n\tembedding\x18\x02 \x03(\x02\x42\x02\x10\x01\"R\n\x0bprotein_obj\x12\x14\n\x0cprotein_path\x18\x01 \x01(\t\x12-\n\x06ligand\x18\x02 \x03(\x0b\x32\x1d.gnina_autoencoder.ligand_obj\";\n\x08\x64\x61tabase\x12/\n\x07protein\x18\x01 \x03(\x0b\x32\x1e.gnina_autoencoder.protein_objb\x06proto3'
)


_LIGAND_OBJ = _descriptor.Descriptor(
    name='ligand_obj',
    full_name='gnina_autoencoder.ligand_obj',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name='ligand_path', full_name='gnina_autoencoder.ligand_obj.ligand_path', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=b"".decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
        _descriptor.FieldDescriptor(
            name='embedding', full_name='gnina_autoencoder.ligand_obj.embedding', index=1,
            number=2, type=2, cpp_type=6, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=b'\020\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=45,
    serialized_end=101,
)


_PROTEIN_OBJ = _descriptor.Descriptor(
    name='protein_obj',
    full_name='gnina_autoencoder.protein_obj',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name='protein_path', full_name='gnina_autoencoder.protein_obj.protein_path', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=b"".decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
        _descriptor.FieldDescriptor(
            name='ligand', full_name='gnina_autoencoder.protein_obj.ligand', index=1,
            number=2, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=103,
    serialized_end=185,
)


_DATABASE = _descriptor.Descriptor(
    name='database',
    full_name='gnina_autoencoder.database',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name='protein', full_name='gnina_autoencoder.database.protein', index=0,
            number=1, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=187,
    serialized_end=246,
)

_PROTEIN_OBJ.fields_by_name['ligand'].message_type = _LIGAND_OBJ
_DATABASE.fields_by_name['protein'].message_type = _PROTEIN_OBJ
DESCRIPTOR.message_types_by_name['ligand_obj'] = _LIGAND_OBJ
DESCRIPTOR.message_types_by_name['protein_obj'] = _PROTEIN_OBJ
DESCRIPTOR.message_types_by_name['database'] = _DATABASE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ligand_obj = _reflection.GeneratedProtocolMessageType('ligand_obj', (_message.Message,), {
    'DESCRIPTOR': _LIGAND_OBJ,
    '__module__': 'gnina_embeddings_pb2'
    # @@protoc_insertion_point(class_scope:gnina_autoencoder.ligand_obj)
})
_sym_db.RegisterMessage(ligand_obj)

protein_obj = _reflection.GeneratedProtocolMessageType('protein_obj', (_message.Message,), {
    'DESCRIPTOR': _PROTEIN_OBJ,
    '__module__': 'gnina_embeddings_pb2'
    # @@protoc_insertion_point(class_scope:gnina_autoencoder.protein_obj)
})
_sym_db.RegisterMessage(protein_obj)

database = _reflection.GeneratedProtocolMessageType('database', (_message.Message,), {
    'DESCRIPTOR': _DATABASE,
    '__module__': 'gnina_embeddings_pb2'
    # @@protoc_insertion_point(class_scope:gnina_autoencoder.database)
})
_sym_db.RegisterMessage(database)


_LIGAND_OBJ.fields_by_name['embedding']._options = None
# @@protoc_insertion_point(module_scope)
